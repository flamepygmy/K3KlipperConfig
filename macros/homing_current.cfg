#
# This is a bit nasty, but Klipper doesn't have homing_current and homing_override
# doesn't work well with Beacon.
#
# One could just have a homing macro in the 'print_start' macros, but if you ever
# do homing directly from FLUIDD...
#

[gcode_macro homing_variables]
variable_homing_current_x:	1.25
variable_homing_current_y:	1.25
gcode:


[gcode_macro G28]
rename_existing: G28.1
gcode:
    {% if 'Y' in params or params|length == 1 %}
    {% set original_y  = printer.configfile.settings['tmc5160 stepper_y']['run_current'] %}
    {% set original_y1 = printer.configfile.settings['tmc5160 stepper_y1']['run_current'] %}
    {% set current_y = printer["gcode_macro homing_variables"].homing_current_y %}
    SET_TMC_CURRENT STEPPER=stepper_y  CURRENT={current_y}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={current_y}
    G4 P1000
    G28.1 Y
    SET_TMC_CURRENT STEPPER=stepper_y  CURRENT={original_y}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={original_y1}
    G4 P1000
  {% endif %}
  {% if 'X' in params or params|length == 1 %}
    {% set original_x  = printer.configfile.settings['tmc5160 stepper_x']['run_current'] %}
    {% set original_x1 = printer.configfile.settings['tmc5160 stepper_x1']['run_current'] %}
    {% set current_x = printer["gcode_macro homing_variables"].homing_current_x %}
    SET_TMC_CURRENT STEPPER=stepper_x  CURRENT={current_x}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={current_x}
    G4 P1000
    G28.1 X
    SET_TMC_CURRENT STEPPER=stepper_x  CURRENT={original_x}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={original_x1}
    G4 P1000
  {% endif %}
  {% if 'Z' in params or params|length == 1 %}
    G28.1 Z
  {% endif %}


# {action_respond_info("CHANGEME: homing X with some macro that calls G28.1 X")}